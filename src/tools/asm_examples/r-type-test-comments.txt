[PC =  0] ADDI R1,R0,20   ; r1 <- r0 + 20 = 20 = 0x0014
[PC =  4] ADDI R2,R0,30   ; r2 <- r0 + 30 = 30 = 0x001e
[PC =  8] ADDU R3,R1,R2   ; r3 <- r1 + r2 = 20 + 30 = 50 = 0x0032
[PC = 12] SUBU R4,R2,R1   ; r4 <- r2 - r1 = 30 - 20 = 10 = 0x000a
[PC = 16] AND  R5,R3,R4   ; r5 <- r3 & r4 = 50 & 10 = 2 = 0x0002
[PC = 20] OR   R6,R1,R2   ; r6 <- r1 | r2 = 20 | 30 = 30 = 0x001e
[PC = 24] XOR  R7,R3,R3   ; r7 <- r3 ^ r3 = 50 ^ 50 = 0
[PC = 28] NOR  R8,R0,R0   ; r8 <- r0 ↓ r0 = 0 ↓ 0 = 1 = 0x0001
[PC = 32] SLL  R9,R3,1    ; r9 <- r3 << 1 (lógico) = 50 << 1 = 100 = 0x0064
[PC = 36] SRL  R10,R8,1   ; r10 <- r8 >> 1 (lógico) = 1 >> 1 = 0 = 0x0000
[PC = 40] SLT  R11,R1,R2  ; r11 <- r1 < r2 ? 1 : 0
[PC = 44] SLLV R12,R4,R11 ; r12 <- r4 << r11 (lógico) = 10 << 1 = 20 = 0x0014
[PC = 48] SRLV R13,R4,R11 ; r13 <- r4 >> r11 (lógico) = 10 >> 1 = 0x0005
[PC = 52] SRA  R14,R8,1   ; r1 <- r8 >> 1 (aritmético) = 1 >> 1 = 2 = 0x0002
[PC = 56] SRAV R15,R8,R11 ; r15 <- r8 >> r11 (aritmético) = 1 >> 1 = 2 = 0x0002
[PC = 60] HALT            ; fin del programa